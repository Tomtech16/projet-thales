Analyse du risque :
Analyse des risques 
Définition d’un risque : tout événement qui peut mettre en danger la réalisation du projet par rapport aux objectifs fixés. Un risque est par nature un danger que l’on veut éviter à tout prix, il est parfois imprévisible, c’est pourquoi il faut faire une analyse des risques, c’est-à-dire qu’on veut prévoir les risques en amont, pour ne pas rencontrer un « effet de surprise ». En effet, il faut anticiper pour mieux réagir lorsque le risque surgit. 
Partie Technique :
1 – Défaillance du Raspberry.
Ce risque est assez négligé alors qu’il peut impacter grandement notre projet checklist, en effet, on est assez limité par les performances du Raspberry, on ne peut pas se permettre de faire un site trop gourmand sinon le Raspberry risque de planter. De plus, on n’est pas à l’abri que le Raspberry surchauffe, c’est pourquoi nous faisons toujours attention lorsqu’on manipule le Raspberry. Pour limiter ce risque, on manipule donc le Raspberry avec une très grande précaution.
2 – Faire fonctionner le site web sur le Raspberry.
Nous avons compris les exigences de site web que nous avons scrupuleusement respectés. Toutefois, il peut y avoir des problèmes techniques lorsqu’on utilise l’application web sur le Raspberry qui ne sont pas présents si on le tourne sur une autre OS, tel que : Linux. C’est pourquoi, il faut tester le site web uniquement sur le Raspberry. Le risque principal étant de tester le site web sur d’autre OS, et le jour de test final, cela ne fonctionne pas sur le Raspberry dû à des problèmes de compatibilités.
3 – Erreur de code.
Une seule ligne de code fausse, c’est-à-dire une ligne de code qui contient des fautes fera parfois dysfonctionner l’application web ou pire, une ligne de code fausse peut empêcher l’affichage du site web, c’est notamment le cas en PHP.  Il faut être minutieux lorsque l’on tape les lignes de codes pour éviter que l’application web plante. Pour ce faire, on demande l’aide d’un camarade et on relit son code sans oublier de mettre des commentaires pour ne pas être perdu lors de la relecture du code les jours suivants.
4 – Base de données non fonctionnelle :
Il se peut que la base de données soient mal liées au code, de ce fait, la base de données ne marche pas. Le risque est une perte de temps que l’on pourrait éviter, rappelons que toutes nos bonnes pratiques sont stockées dans la base donnée avec le nom du programme, le type d’exécution, mots-clés, applications. Dans la supposition que la liaison avec la base de données n’est pas opérationnelle, les données ne seront pas présentes sur le site web. Pour pallier ce risque, il est important de s’entraider et de répondre à la question : Pourquoi la base de données ne fonctionnent-elles pas ? pour ensuite se demander ce que nous devons faire pour que la base de données fonctionne.
Partie gestion de projet :
5 - Personne absente.
Il y a un risque qu’une personne soit malade lors de la réalisation du projet. Ou pire qu’une personne abandonne complètement le projet. Il est important de suivre le comportement mental de toutes les personnes du groupe pour comprendre s’ils veulent abandonner le projet, pour notre part, on ressent que tout le monde est motivé et souhaite contribuer au projet, nous n’avons personne qui a manifesté son désintérêt pour le projet mais nous restons prudents jusqu’à la fin du Projet Checklist. 
6 - Répartition des tâches.
La répartition des tâches est très importante car elle permet de prévoir le rôle de chaque personne de notre groupe, le risque étant de faire la répartition des tâches trop tardivement ou que la répartition des tâches soient désavantageuses pour certain, car dans la répartition des tâches, il faut prendre en compte que tout le monde n’a pas le même niveau, il est important de s’adapter mais de partager sa connaissance afin qu’une personne en déni sur un thème reste informé et qu’il comprenne, la répartition des tâches doit être au profit de tous le monde et permettre de mener plus efficacement le projet.
Voici un résumé des risques rencontrés sous forme de tableau et nous les avons classés selon leur probabilité et leur conséquence sur le projet Checklist :
Nous ne sommes pas à l’abri d’autres risques, tel que des dégâts environnementaux : un incendie ou un une inondation et le Raspberry ne fonctionne plus, toutefois ce type de risque est casi impossible mais le risque 0 n’existe pas !
